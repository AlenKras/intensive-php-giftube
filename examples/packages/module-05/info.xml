<?xml version="1.0" encoding="utf-8"?>
<examples>
  <example name="Список категорий" index="1">
    <description>to do</description>
    <files>
      <file name="index.php" main="true" show="true">
        <intro order="1">В этой демке научимся устанавливать соединение с MySQL и выполнять простые запросы
        на получение записей.</intro>
        <states>
          <state order="3">Вначале сформируем весь SQL код запроса на получение всего списка категорий.
            Выполним этот запрос и получим ресурс результата.
          </state>
          <state order="4">Проверяем успешность выполнения. Получаем все категории в виде двухмерного массива.</state>
          <state order="6">Если запрос завершился неудачно, то подключаем шаблон для показа текста ошибки</state>
          <state reload="true" order="8">Получаем текст последней ошибки MySQL и показываем это на странице</state>
        </states>
      </file>
      <file name="init.php" main="false" show="true">
        <intro order="2">В этом сценарии происходит подключение к СУБД. Все необходимые параметры для подключения - хост,
        имя пользователя, пароль и имя бд находятся в отдельном массиве. Сценарий с этим массивом называется 'config/db.php'.
        Вызов функции "mysqli_connect" устанавливает подключение, а функция "mysqli_set_charset" указывает кодировку по умолчанию,
        которая будет использоваться при работе с СУБД.</intro>
        <states/>
      </file>
      <file name="templates/error.php" main="false" show="true">
        <intro order="5">Шаблон страницы, которая будет показана при ошибке подключения к СУБД.</intro>
        <states/>
      </file>
      <file name="templates/index.php" main="false" show="true">
        <intro order="7">Полный шаблон главной страницы, где в левом меню выводится список категорий, полученный из MySQL.</intro>
        <states/>
      </file>
    </files>
  </example>
  <example name="Список гифок" index="2">
    <description>to do</description>
    <files>
      <file name="index.php" main="true" show="true">
        <intro order="1">Эта демка покажет как выполнять более сложные запросы, где участвует больше одной
        таблицы. Мы покажем на главной странице список из самых популярных гифок, получив его из БД в виде
        двумерного массива.</intro>
        <states>
          <state order="2">Формируем SQL запрос: получить гифки вместе с именем автора, сортируем по кол-ву просмотров и
            ограничиваем девятью штуками.
          </state>
          <state reload="true" order="3">Выполняем запрос и получаем ресурс результата, который преобразуем в двумерный массив и
            передаем в шаблон главной страницы.
          </state>
          <state order="6" reload="true">Подключаем шаблон для показа ошибки и передаем туда текст последней MySQL ошибки</state>
        </states>
      </file>
      <file name="templates/main.php" main="false" show="true">
        <intro order="4">Шаблон главной страницы. Этот шаблон сам подключает внутри себя другой шаблон для
        показа списка гифок.</intro>
        <states/>
      </file>
      <file name="templates/_grid.php" main="false" show="true">
        <intro order="5">Шаблон блока для показа гифки. В него передается ассоциативный массив со списком
        гифок, который до этого получили из БД.</intro>
        <states/>
      </file>
      <file name="init.php" main="false" show="false">
        <states/>
      </file>
      <file name="templates/error.php" main="false" show="false">
        <states/>
      </file>
      <file name="templates/layout.php" main="false" show="false">
        <states/>
      </file>
    </files>
  </example>
  <example name="Поиск гифок" index="3">
    <description>to do</description>
    <files>
      <file name="search.php" main="true" show="true">
        <intro order="1">Здесь мы создадим новую страницу для поиска гифон по названию и описанию. Попутно
        научимся правильно экранировать данные от пользователя, перед их вставкой в SQL запрос.</intro>
        <states>
          <state order="3">Получаем параметр запроса с поисковой строкой. Передаем его функции
            mysqli_real_escape_string, чтобы безопасно передать в SQL запрос
          </state>
          <state order="4">Формируем SQL запрос на получение списка гифок с нестрогим поиском по названию или описанию
          </state>
          <state order="5" reload="true">Выполняем запрос и получаем ресурс результата, который передаем в шаблон главной страницы
          </state>
          <state order="6" reload="true">Подключаем шаблон для показа ошибки и передаем туда текст последней MySQL ошибки</state>
        </states>
      </file>
      <file name="templates/search.php" main="false" show="true">
        <intro order="2">Шаблон для показа результатов поиска. Содержит в себе только заголовок, а также
        подключает уже знакомый шаблон блока с превью гифок.</intro>
        <states/>
      </file>
      <file name="templates/_grid.php" main="false" show="false">
        <states/>
      </file>
      <file name="init.php" main="false" show="false">
        <states/>
      </file>
    </files>
  </example>
</examples>
