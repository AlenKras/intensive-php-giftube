<?xml version="1.0" encoding="utf-8" ?>
<examples>
    <example name="Счетчик посещений" index="1">
        <description>
            Сделаем простой счетчик, который будет показывать сколько раз пользователь загружал эту страницу.
            Для хранения числа визитов используем куки, а затем сессию.
        </description>
        <files>
            <file name="index.php" main="true" show="true">
                <states>
                    <state>Определимся как будет называться наша кука для хранения счетчика</state>
                    <state>Установим начальное значение счетчика - одно посещение</state>
                    <state>Кука будет жить ровно 30 дней. Функция strtotime переводит дату в TIMESTAMP формат</state>
                    <state>Путь на сайте, по которому будет доступна кука. Слеш означает весь сайт</state>
                    <state>Проверяем существование куки с этим именем. Если кука существует, то получаем её значение
                    в переменную и увеличиваем это значение на единицу.</state>
                    <state>Устанавливаем куку с помощью функции setcookie. Эта функция создаст новую куку, или
                    обновит значение существующей.</state>
                    <state>Посмотрим что у нас получилось! Выведем значение счетчика на страницу.</state>
                </states>
            </file>
            <file name="session.php" show="true" main="false">
                <states>
                    <state>Если в сценарии мы собираемся работать с сессиями, то очень важно не забывать вызвать в
                    начале функцию session_start(). Эта функция подготовливает сессии к работе.</state>
                    <state>Проверяем существование сессии с именем visit_count. Если такая сессия существует, то
                    получаем её значение и прибавляем к нему единицу.</state>
                    <state>Записываем новое значение счетчика обратно в сессию и показываем его на
                    экране</state>
                </states>
            </file>
        </files>
    </example>
    <example name="Аутентификация" index="2">
        <description>
            Сделаем форму входа на сайт. Научимся проверять пароль пользователя и выполнять аутентификацию.
        </description>
        files
        <files>
            <file name="index.php" main="true" show="true" >
                <states>
                    <state>Проверяем, что форма была отправлена</state>
                    <state>Определяем обязательные для заполнения поля, а также массив,
                     где будут храниться ошибки</state>
                    <state>Проверяем все поля на заполненность</state>
                    <state>Функция searchUserByEmail() умеет искать в нашем массиве $users пользователя с переданным
                        email.</state>
                    <state>Проверяем, что сохраненный хеш пароля и введенный пароль из формы совпадают. Если совпадение
                    есть, значит пользователь указал верный пароль. Тогда мы можем открыть для него сессию и записать
                    в неё все данные о пользователе</state>
                    <state>В противном случае пароль неверный и мы добавляем сообщение об этом в список ошибок</state>
                    <state>Если функция searchUserByEmail() вернула false, значит в массиве $users пользователя с таким
                    email не существует. Записываем это как ошибку валидации</state>
                    <state>Если были ошибки, значит мы снова должны показать форму входа, передав в шаблон список
                    полученных ошибок</state>
                    <state>Если ошибок нет, значит аутентификация прошла успешно и пользователя можно
                    перенаправить на главную страницу</state>
                    <state>Если форма не была отправлена, то проверяем существование сессии с пользователем.
                    Сессия есть - значит пользователь залогинен и ему можно показать страницу приветствия.
                    Сессии нет - показываем форму для входа на сайт.</state>
                    <state>Подключаем лейаут и выводим его на экран</state>
                </states>
            </file>
            <file name="func.php" show="true" main="false">
                <states/>
            </file>
            <file name="data.php" show="true" main="false">
                <states/>
            </file>
            <file name="templates/enter.php" show="true" main="false">
                <states/>
            </file>
            <file name="templates/welcome.php" show="true" main="false">
                <states/>
            </file>
            <file name="templates/layout.php" show="false" main="false">
                <states/>
            </file>
        </files>
    </example>
    <example name="Восстановление пароля" index="3">
        <description>
            Добавим на сайт возможность восстановить забытый пароль.
        </description>
        <files>
            <file name="index.php" main="true" show="true">
                <states>
                    <state>Не забудем открыть сессию. В переменной $success_send находится статус отправки письма
                    для восстановления пароля</state>
                    <state>Проверим, что форма была отправлена. Получим значение введенного email в переменную</state>
                    <state>Функция searchUserByEmail() умеет искать в нашем массиве $users пользователя с переданным
                    email. Если функция что-то вернула, значит такой пользователь существует и можно двигаться
                    дальше</state>
                    <state>Здесь мы формируем ссылку на восстановление пароля. Ссылка состоит из адреса страницы
                    и параметра запроса со случайным кодом.</state>
                    <state>Нам необходимо запомнить связь случайного кода и пользователя, для которого он сформирован.
                    Поэтому мы записываем эту информацию в сессию. С помощью функции mail() ссылку на восстановление
                    пароля по электронной почте</state>
                    <state>Письмо успешно отправлено, поэтому можно установить переменную в true</state>
                    <state>Подключаем шаблон с формой восстановления пароля и передаем туда результат отправки письма</state>
                    <state>Подключаем лейаут и выводим все на экран</state>
                </states>
            </file>
            <file name="forgot.php" main="false" show="true">
                <states>
                    <state>Проверяем, что текущий сценарий содержит параметр запроса с секретным кодом. Получим этот
                    код в переменную</state>
                    <state>На эту страницу пользователь должен попасть, только если перед этим он отправлял форму для
                    восстановления пароля. Значит у него должна быть открыта сессия, где есть код и его email.</state>
                    <state>Проверяем, что секретный код из сессии равен коду из параметра запроса. Так мы можем
                    убедиться, что этот пользователь заполнял форму и получил письмо с этой ссылкой.</state>
                    <state>Сгенерируем пользователю новый пароль из 6 случайных символов, а затем получим хэш от этого
                    пароля</state>
                    <state>Сформируем и отправим письмо с новым паролем</state>
                    <state>Если код из сессии и код из параметра запроса не совпадают, то покажем это на странице.</state>
                </states>
            </file>
            <file name="data.php" main="false" show="true">
                <states/>
            </file>
        </files>
    </example>
</examples>