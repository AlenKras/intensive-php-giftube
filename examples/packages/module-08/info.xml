<?xml version="1.0" encoding="utf-8"?>
<examples>
  <example name="Транзакции" index="1">
    <description>to do</description>
    <files>
      <file name="addfav.php" main="true" show="true">
        <intro order="1">Чтобы разобраться как работают транзакции, давайте прикрутим к сайту еще одну фичу -
        добавление в избранное. Процесс добавления гифки в избранное пользователя состоит из двух запросов.
        Первый запрос обновляет счетчик избранного у записи из таблицы gifs, а второй добавляет новую запись в
        таблицу избранных гифок. Чтобы эти два запроса гарантированно исполнялись вместе, мы обернем их в
        транзакцию.</intro>
        <states>
          <state order="2">Открываем новую транзакцию. Все следующие запросы будут частью этой транзакции</state>
          <state order="3">Выполняем все необходимые запросы и сохраняем их результат</state>
          <state order="4">Фиксируем транзакцию, если все запросы выполнились успешно</state>
          <state order="5">Если хотя бы один запрос завершился ошибкой, то откатываем транзакцию</state>
          <state order="6">Перенаправляем пользователя обратно на страницу просмотра гифки</state>
        </states>
      </file>
      <file name="gif.php" main="false" show="true">
        <intro order="8">Сценарий страницы просмотра гифки</intro>
        <states>
          <state order="9">Выполним запрос на получение гифок из той же категории (похожие гифки)</state>
          <state order="10" reload="true">Узнаем, добавлена ли эта гифка в избранное, выполнив запрос.</state>
        </states>
      </file>
      <file name="templates/gif.php" main="false" show="true">
        <intro order="7">Шаблон страницы просмотра гифки. Мы внесли одно важное изменение. Необходимо показывать,
        что гифка уже в избранном. Для этого в шаблон передается переменная $is_fav, проверяя которую кнопке
        "В избранное" назначается или не назначается класс, делающий кнопку нвжатой.</intro>
        <states/>
      </file>
      <file name="init.php" main="false" show="false">
        <states/>
      </file>
    </files>
  </example>
  <example name="Постраничный вывод" index="2">
    <description>to do</description>
    <files>
      <file name="index.php" main="true" show="true">
        <intro order="1">В этой демке добавим на главную страницу постраничный вывод гифок.</intro>
        <states>
          <state order="2">Получаем текущую страницу. Определяем число гифок на странице</state>
          <state order="3">Узнаем общее число гифок. Считаем кол-во страниц и смещение</state>
          <state order="4">Заполняем массив номерами всех страниц</state>
          <state order="5">Формируем запрос на показ списка гифок, учитывая смещение и число гифок на странице</state>
          <state order="8" reload="true">Передаем в шаблон полученные гифки и всю информацию для пагинации</state>
        </states>
      </file>
      <file name="templates/main.php" main="false" show="true">
        <intro order="7">Шаблон главной страницы. Подключаем здесь два блока - для вывода гифок и для показа ссылок
        на страницы</intro>
        <states/>
      </file>
      <file name="templates/_pagination.php" main="false" show="true">
        <intro order="6">Это шаблон блока пагинации. Здесь выводятся ссылки на все страницы. Если страница всего одна,
        то этот блок не будет показан.</intro>
        <states/>
      </file>
      <file name="templates/_grid.php" main="false" show="false">
        <states/>
      </file>
    </files>
  </example>
  <example name="Полнотекстовый поиск" index="3">
    <description>to do</description>
    <files>
      <file name="search.php" main="true" show="true">
        <intro order="1">Делаем полнотекстовый поиск. Искать будем гифки по их названию и описанию. Для этого поменяем
        старую логику поиска, которая полагалась на оператор "LIKE". Вместо этого добавим полнотекстовый индекс и
        поменяем SQL-запрос.</intro>
        <states>
          <state order="2">Добавим полям "название" и "описание" полнотекстовый индекс, чтобы стало возможным выполнять
            по ним поиск
          </state>
          <state order="3">Получим содержимое поискового запроса. Если поисковый запрос не задан, то присвоим пустую
            строку
          </state>
          <state order="4">Будем выполнять поиск гифок, только если был задан поисковый запрос</state>
          <state order="5">Напишем SQL запрос на поиск с использованием директивы MATCH. На месте искомой строки стоит
            плейсхолдер
          </state>
          <state order="7" reload="true">Выполним подготовленное выражение, получим его результат и преобразуем в двумерный массив</state>
        </states>
      </file>
      <file name="templates/search.php" main="false" show="true">
        <intro order="6">Шаблон для страницы с результатами поиска.</intro>
        <states/>
      </file>
      <file name="templates/_grid.php" main="false" show="false">
        <states/>
      </file>
    </files>
  </example>
</examples>